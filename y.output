Terminals unused in grammar

   _else
   _struct
   _colon
   _void
   _charcons


Rules useless in parser due to conflicts

   33 expressionStmt: expression _semicolon


State 50 conflicts: 12 reduce/reduce


Grammar

    0 $accept: Stmt $end

    1 Stmt: program

    2 $@1: %empty

    3 program: importlist $@1 declarationList

    4 importlist: importlist importstmnt
    5           | importstmnt

    6 importstmnt: _import _id

    7 declarationList: Pgm

    8 Pgm: _int _main _leftp _rightp _leftb statementList _rightb _eofile

    9 statementList: statementList statement
   10              | statement

   11 statement: expressionStmt
   12          | vardeclaration
   13          | selectionStmt
   14          | whileStmt
   15          | forStmt
   16          | breakStmt

   17 expressionStmt: expression _semicolon

   18 vardeclaration: typeSpecifier varList _semicolon

   19 varList: varList _comma mutable
   20        | mutable

   21 mutable: _id
   22        | _id dimList

   23 dimList: dimList _leftsp _num _rightsp
   24        | _leftsp _num _rightsp

   25 typeSpecifier: _char
   26              | _short
   27              | _int
   28              | _long
   29              | _float
   30              | _double

   31 expression: LValue _assign Expr
   32           | LValue _assign expression

   33 expressionStmt: expression _semicolon

   34 LValue: _id
   35       | arrayDims

   36 arrayDims: arrayDims _leftsp Expr _rightsp
   37          | _id _leftsp Expr _rightsp

   38 Expr: Expr _plus Expr
   39     | Expr _minus Expr
   40     | Expr _mul Expr
   41     | Expr _div Expr
   42     | Expr _modulo Expr
   43     | _uminus Expr
   44     | Expr _lt Expr
   45     | Expr _le Expr
   46     | Expr _ge Expr
   47     | Expr _gt Expr
   48     | Expr _eq Expr
   49     | Expr _ne Expr
   50     | Expr _or Expr
   51     | Expr _and Expr
   52     | _leftp Expr _rightp
   53     | LValue
   54     | _num
   55     | _dnum

   56 condition: Expr
   57          | expression

   58 $@2: %empty

   59 selectionStmt: _if _leftp condition $@2 _rightp Stmtlist

   60 $@3: %empty

   61 $@4: %empty

   62 whileStmt: _while $@3 _leftp condition $@4 _rightp Stmtlist

   63 $@5: %empty

   64 $@6: %empty

   65 $@7: %empty

   66 $@8: %empty

   67 forStmt: _for $@5 _leftp condition _semicolon $@6 condition _semicolon $@7 condition _rightp $@8 Stmtlist

   68 breakStmt: _break _semicolon

   69 Stmtlist: _leftb statementList _rightb
   70         | statement
   71         | _semicolon


Terminals, with rules where they appear

$end (0) 0
error (256)
_or (258) 50
_and (259) 51
_eq (260) 48
_ne (261) 49
_lt (262) 44
_le (263) 45
_gt (264) 47
_ge (265) 46
_minus (266) 39
_plus (267) 38
_mul (268) 40
_div (269) 41
_modulo (270) 42
_uminus (271) 43
_char (272) 25
_int (273) 8 27
_float (274) 29
_double (275) 30
_short (276) 26
_long (277) 28
_else (278)
_break (279) 68
_struct (280)
_main (281) 8
_assign (282) 31 32
_import (283) 6
_leftb (284) 8 69
_rightb (285) 8 69
_leftp (286) 8 52 59 62 67
_rightp (287) 8 52 59 62 67
_leftsp (288) 23 24 36 37
_rightsp (289) 23 24 36 37
_comma (290) 19
_semicolon (291) 17 18 33 67 68 71
_colon (292)
_void (293)
_eofile (294) 8
_id (295) 6 21 22 34 37
_charcons (296)
_num (297) 23 24 54
_dnum (298) 55
_if (299) 59
_while (300) 62
_for (301) 67


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
Stmt (48)
    on left: 1, on right: 0
program (49)
    on left: 3, on right: 1
$@1 (50)
    on left: 2, on right: 3
importlist (51)
    on left: 4 5, on right: 3 4
importstmnt (52)
    on left: 6, on right: 4 5
declarationList (53)
    on left: 7, on right: 3
Pgm (54)
    on left: 8, on right: 7
statementList (55)
    on left: 9 10, on right: 8 9 69
statement (56)
    on left: 11 12 13 14 15 16, on right: 9 10 70
expressionStmt (57)
    on left: 17 33, on right: 11
vardeclaration (58)
    on left: 18, on right: 12
varList (59)
    on left: 19 20, on right: 18 19
mutable (60)
    on left: 21 22, on right: 19 20
dimList (61)
    on left: 23 24, on right: 22 23
typeSpecifier (62)
    on left: 25 26 27 28 29 30, on right: 18
expression (63)
    on left: 31 32, on right: 17 32 33 57
LValue (64)
    on left: 34 35, on right: 31 32 53
arrayDims (65)
    on left: 36 37, on right: 35 36
Expr (66)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55,
    on right: 31 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
    56
condition (67)
    on left: 56 57, on right: 59 62 67
selectionStmt (68)
    on left: 59, on right: 13
$@2 (69)
    on left: 58, on right: 59
whileStmt (70)
    on left: 62, on right: 14
$@3 (71)
    on left: 60, on right: 62
$@4 (72)
    on left: 61, on right: 62
forStmt (73)
    on left: 67, on right: 15
$@5 (74)
    on left: 63, on right: 67
$@6 (75)
    on left: 64, on right: 67
$@7 (76)
    on left: 65, on right: 67
$@8 (77)
    on left: 66, on right: 67
breakStmt (78)
    on left: 68, on right: 16
Stmtlist (79)
    on left: 69 70 71, on right: 59 62 67


State 0

    0 $accept: . Stmt $end

    _import  shift, and go to state 1

    Stmt         go to state 2
    program      go to state 3
    importlist   go to state 4
    importstmnt  go to state 5


State 1

    6 importstmnt: _import . _id

    _id  shift, and go to state 6


State 2

    0 $accept: Stmt . $end

    $end  shift, and go to state 7


State 3

    1 Stmt: program .

    $default  reduce using rule 1 (Stmt)


State 4

    3 program: importlist . $@1 declarationList
    4 importlist: importlist . importstmnt

    _import  shift, and go to state 1

    $default  reduce using rule 2 ($@1)

    $@1          go to state 8
    importstmnt  go to state 9


State 5

    5 importlist: importstmnt .

    $default  reduce using rule 5 (importlist)


State 6

    6 importstmnt: _import _id .

    $default  reduce using rule 6 (importstmnt)


State 7

    0 $accept: Stmt $end .

    $default  accept


State 8

    3 program: importlist $@1 . declarationList

    _int  shift, and go to state 10

    declarationList  go to state 11
    Pgm              go to state 12


State 9

    4 importlist: importlist importstmnt .

    $default  reduce using rule 4 (importlist)


State 10

    8 Pgm: _int . _main _leftp _rightp _leftb statementList _rightb _eofile

    _main  shift, and go to state 13


State 11

    3 program: importlist $@1 declarationList .

    $default  reduce using rule 3 (program)


State 12

    7 declarationList: Pgm .

    $default  reduce using rule 7 (declarationList)


State 13

    8 Pgm: _int _main . _leftp _rightp _leftb statementList _rightb _eofile

    _leftp  shift, and go to state 14


State 14

    8 Pgm: _int _main _leftp . _rightp _leftb statementList _rightb _eofile

    _rightp  shift, and go to state 15


State 15

    8 Pgm: _int _main _leftp _rightp . _leftb statementList _rightb _eofile

    _leftb  shift, and go to state 16


State 16

    8 Pgm: _int _main _leftp _rightp _leftb . statementList _rightb _eofile

    _char    shift, and go to state 17
    _int     shift, and go to state 18
    _float   shift, and go to state 19
    _double  shift, and go to state 20
    _short   shift, and go to state 21
    _long    shift, and go to state 22
    _break   shift, and go to state 23
    _id      shift, and go to state 24
    _if      shift, and go to state 25
    _while   shift, and go to state 26
    _for     shift, and go to state 27

    statementList   go to state 28
    statement       go to state 29
    expressionStmt  go to state 30
    vardeclaration  go to state 31
    typeSpecifier   go to state 32
    expression      go to state 33
    LValue          go to state 34
    arrayDims       go to state 35
    selectionStmt   go to state 36
    whileStmt       go to state 37
    forStmt         go to state 38
    breakStmt       go to state 39


State 17

   25 typeSpecifier: _char .

    $default  reduce using rule 25 (typeSpecifier)


State 18

   27 typeSpecifier: _int .

    $default  reduce using rule 27 (typeSpecifier)


State 19

   29 typeSpecifier: _float .

    $default  reduce using rule 29 (typeSpecifier)


State 20

   30 typeSpecifier: _double .

    $default  reduce using rule 30 (typeSpecifier)


State 21

   26 typeSpecifier: _short .

    $default  reduce using rule 26 (typeSpecifier)


State 22

   28 typeSpecifier: _long .

    $default  reduce using rule 28 (typeSpecifier)


State 23

   68 breakStmt: _break . _semicolon

    _semicolon  shift, and go to state 40


State 24

   34 LValue: _id .
   37 arrayDims: _id . _leftsp Expr _rightsp

    _leftsp  shift, and go to state 41

    $default  reduce using rule 34 (LValue)


State 25

   59 selectionStmt: _if . _leftp condition $@2 _rightp Stmtlist

    _leftp  shift, and go to state 42


State 26

   62 whileStmt: _while . $@3 _leftp condition $@4 _rightp Stmtlist

    $default  reduce using rule 60 ($@3)

    $@3  go to state 43


State 27

   67 forStmt: _for . $@5 _leftp condition _semicolon $@6 condition _semicolon $@7 condition _rightp $@8 Stmtlist

    $default  reduce using rule 63 ($@5)

    $@5  go to state 44


State 28

    8 Pgm: _int _main _leftp _rightp _leftb statementList . _rightb _eofile
    9 statementList: statementList . statement

    _char    shift, and go to state 17
    _int     shift, and go to state 18
    _float   shift, and go to state 19
    _double  shift, and go to state 20
    _short   shift, and go to state 21
    _long    shift, and go to state 22
    _break   shift, and go to state 23
    _rightb  shift, and go to state 45
    _id      shift, and go to state 24
    _if      shift, and go to state 25
    _while   shift, and go to state 26
    _for     shift, and go to state 27

    statement       go to state 46
    expressionStmt  go to state 30
    vardeclaration  go to state 31
    typeSpecifier   go to state 32
    expression      go to state 33
    LValue          go to state 34
    arrayDims       go to state 35
    selectionStmt   go to state 36
    whileStmt       go to state 37
    forStmt         go to state 38
    breakStmt       go to state 39


State 29

   10 statementList: statement .

    $default  reduce using rule 10 (statementList)


State 30

   11 statement: expressionStmt .

    $default  reduce using rule 11 (statement)


State 31

   12 statement: vardeclaration .

    $default  reduce using rule 12 (statement)


State 32

   18 vardeclaration: typeSpecifier . varList _semicolon

    _id  shift, and go to state 47

    varList  go to state 48
    mutable  go to state 49


State 33

   17 expressionStmt: expression . _semicolon
   33               | expression . _semicolon

    _semicolon  shift, and go to state 50


State 34

   31 expression: LValue . _assign Expr
   32           | LValue . _assign expression

    _assign  shift, and go to state 51


State 35

   35 LValue: arrayDims .
   36 arrayDims: arrayDims . _leftsp Expr _rightsp

    _leftsp  shift, and go to state 52

    $default  reduce using rule 35 (LValue)


State 36

   13 statement: selectionStmt .

    $default  reduce using rule 13 (statement)


State 37

   14 statement: whileStmt .

    $default  reduce using rule 14 (statement)


State 38

   15 statement: forStmt .

    $default  reduce using rule 15 (statement)


State 39

   16 statement: breakStmt .

    $default  reduce using rule 16 (statement)


State 40

   68 breakStmt: _break _semicolon .

    $default  reduce using rule 68 (breakStmt)


State 41

   37 arrayDims: _id _leftsp . Expr _rightsp

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 58


State 42

   59 selectionStmt: _if _leftp . condition $@2 _rightp Stmtlist

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    expression  go to state 59
    LValue      go to state 60
    arrayDims   go to state 35
    Expr        go to state 61
    condition   go to state 62


State 43

   62 whileStmt: _while $@3 . _leftp condition $@4 _rightp Stmtlist

    _leftp  shift, and go to state 63


State 44

   67 forStmt: _for $@5 . _leftp condition _semicolon $@6 condition _semicolon $@7 condition _rightp $@8 Stmtlist

    _leftp  shift, and go to state 64


State 45

    8 Pgm: _int _main _leftp _rightp _leftb statementList _rightb . _eofile

    _eofile  shift, and go to state 65


State 46

    9 statementList: statementList statement .

    $default  reduce using rule 9 (statementList)


State 47

   21 mutable: _id .
   22        | _id . dimList

    _leftsp  shift, and go to state 66

    $default  reduce using rule 21 (mutable)

    dimList  go to state 67


State 48

   18 vardeclaration: typeSpecifier varList . _semicolon
   19 varList: varList . _comma mutable

    _comma      shift, and go to state 68
    _semicolon  shift, and go to state 69


State 49

   20 varList: mutable .

    $default  reduce using rule 20 (varList)


State 50

   17 expressionStmt: expression _semicolon .
   33               | expression _semicolon .

    _char     reduce using rule 17 (expressionStmt)
    _char     [reduce using rule 33 (expressionStmt)]
    _int      reduce using rule 17 (expressionStmt)
    _int      [reduce using rule 33 (expressionStmt)]
    _float    reduce using rule 17 (expressionStmt)
    _float    [reduce using rule 33 (expressionStmt)]
    _double   reduce using rule 17 (expressionStmt)
    _double   [reduce using rule 33 (expressionStmt)]
    _short    reduce using rule 17 (expressionStmt)
    _short    [reduce using rule 33 (expressionStmt)]
    _long     reduce using rule 17 (expressionStmt)
    _long     [reduce using rule 33 (expressionStmt)]
    _break    reduce using rule 17 (expressionStmt)
    _break    [reduce using rule 33 (expressionStmt)]
    _rightb   reduce using rule 17 (expressionStmt)
    _rightb   [reduce using rule 33 (expressionStmt)]
    _id       reduce using rule 17 (expressionStmt)
    _id       [reduce using rule 33 (expressionStmt)]
    _if       reduce using rule 17 (expressionStmt)
    _if       [reduce using rule 33 (expressionStmt)]
    _while    reduce using rule 17 (expressionStmt)
    _while    [reduce using rule 33 (expressionStmt)]
    _for      reduce using rule 17 (expressionStmt)
    _for      [reduce using rule 33 (expressionStmt)]
    $default  reduce using rule 17 (expressionStmt)


State 51

   31 expression: LValue _assign . Expr
   32           | LValue _assign . expression

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    expression  go to state 70
    LValue      go to state 60
    arrayDims   go to state 35
    Expr        go to state 71


State 52

   36 arrayDims: arrayDims _leftsp . Expr _rightsp

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 72


State 53

   43 Expr: _uminus . Expr

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 73


State 54

   52 Expr: _leftp . Expr _rightp

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 74


State 55

   54 Expr: _num .

    $default  reduce using rule 54 (Expr)


State 56

   55 Expr: _dnum .

    $default  reduce using rule 55 (Expr)


State 57

   53 Expr: LValue .

    $default  reduce using rule 53 (Expr)


State 58

   37 arrayDims: _id _leftsp Expr . _rightsp
   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    _or       shift, and go to state 75
    _and      shift, and go to state 76
    _eq       shift, and go to state 77
    _ne       shift, and go to state 78
    _lt       shift, and go to state 79
    _le       shift, and go to state 80
    _gt       shift, and go to state 81
    _ge       shift, and go to state 82
    _minus    shift, and go to state 83
    _plus     shift, and go to state 84
    _mul      shift, and go to state 85
    _div      shift, and go to state 86
    _modulo   shift, and go to state 87
    _rightsp  shift, and go to state 88


State 59

   57 condition: expression .

    $default  reduce using rule 57 (condition)


State 60

   31 expression: LValue . _assign Expr
   32           | LValue . _assign expression
   53 Expr: LValue .

    _assign  shift, and go to state 51

    $default  reduce using rule 53 (Expr)


State 61

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr
   56 condition: Expr .

    _or      shift, and go to state 75
    _and     shift, and go to state 76
    _eq      shift, and go to state 77
    _ne      shift, and go to state 78
    _lt      shift, and go to state 79
    _le      shift, and go to state 80
    _gt      shift, and go to state 81
    _ge      shift, and go to state 82
    _minus   shift, and go to state 83
    _plus    shift, and go to state 84
    _mul     shift, and go to state 85
    _div     shift, and go to state 86
    _modulo  shift, and go to state 87

    $default  reduce using rule 56 (condition)


State 62

   59 selectionStmt: _if _leftp condition . $@2 _rightp Stmtlist

    $default  reduce using rule 58 ($@2)

    $@2  go to state 89


State 63

   62 whileStmt: _while $@3 _leftp . condition $@4 _rightp Stmtlist

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    expression  go to state 59
    LValue      go to state 60
    arrayDims   go to state 35
    Expr        go to state 61
    condition   go to state 90


State 64

   67 forStmt: _for $@5 _leftp . condition _semicolon $@6 condition _semicolon $@7 condition _rightp $@8 Stmtlist

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    expression  go to state 59
    LValue      go to state 60
    arrayDims   go to state 35
    Expr        go to state 61
    condition   go to state 91


State 65

    8 Pgm: _int _main _leftp _rightp _leftb statementList _rightb _eofile .

    $default  reduce using rule 8 (Pgm)


State 66

   24 dimList: _leftsp . _num _rightsp

    _num  shift, and go to state 92


State 67

   22 mutable: _id dimList .
   23 dimList: dimList . _leftsp _num _rightsp

    _leftsp  shift, and go to state 93

    $default  reduce using rule 22 (mutable)


State 68

   19 varList: varList _comma . mutable

    _id  shift, and go to state 47

    mutable  go to state 94


State 69

   18 vardeclaration: typeSpecifier varList _semicolon .

    $default  reduce using rule 18 (vardeclaration)


State 70

   32 expression: LValue _assign expression .

    $default  reduce using rule 32 (expression)


State 71

   31 expression: LValue _assign Expr .
   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    _or      shift, and go to state 75
    _and     shift, and go to state 76
    _eq      shift, and go to state 77
    _ne      shift, and go to state 78
    _lt      shift, and go to state 79
    _le      shift, and go to state 80
    _gt      shift, and go to state 81
    _ge      shift, and go to state 82
    _minus   shift, and go to state 83
    _plus    shift, and go to state 84
    _mul     shift, and go to state 85
    _div     shift, and go to state 86
    _modulo  shift, and go to state 87

    $default  reduce using rule 31 (expression)


State 72

   36 arrayDims: arrayDims _leftsp Expr . _rightsp
   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    _or       shift, and go to state 75
    _and      shift, and go to state 76
    _eq       shift, and go to state 77
    _ne       shift, and go to state 78
    _lt       shift, and go to state 79
    _le       shift, and go to state 80
    _gt       shift, and go to state 81
    _ge       shift, and go to state 82
    _minus    shift, and go to state 83
    _plus     shift, and go to state 84
    _mul      shift, and go to state 85
    _div      shift, and go to state 86
    _modulo   shift, and go to state 87
    _rightsp  shift, and go to state 95


State 73

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   43     | _uminus Expr .
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    $default  reduce using rule 43 (Expr)


State 74

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr
   52     | _leftp Expr . _rightp

    _or      shift, and go to state 75
    _and     shift, and go to state 76
    _eq      shift, and go to state 77
    _ne      shift, and go to state 78
    _lt      shift, and go to state 79
    _le      shift, and go to state 80
    _gt      shift, and go to state 81
    _ge      shift, and go to state 82
    _minus   shift, and go to state 83
    _plus    shift, and go to state 84
    _mul     shift, and go to state 85
    _div     shift, and go to state 86
    _modulo  shift, and go to state 87
    _rightp  shift, and go to state 96


State 75

   50 Expr: Expr _or . Expr

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 97


State 76

   51 Expr: Expr _and . Expr

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 98


State 77

   48 Expr: Expr _eq . Expr

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 99


State 78

   49 Expr: Expr _ne . Expr

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 100


State 79

   44 Expr: Expr _lt . Expr

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 101


State 80

   45 Expr: Expr _le . Expr

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 102


State 81

   47 Expr: Expr _gt . Expr

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 103


State 82

   46 Expr: Expr _ge . Expr

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 104


State 83

   39 Expr: Expr _minus . Expr

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 105


State 84

   38 Expr: Expr _plus . Expr

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 106


State 85

   40 Expr: Expr _mul . Expr

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 107


State 86

   41 Expr: Expr _div . Expr

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 108


State 87

   42 Expr: Expr _modulo . Expr

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    LValue     go to state 57
    arrayDims  go to state 35
    Expr       go to state 109


State 88

   37 arrayDims: _id _leftsp Expr _rightsp .

    $default  reduce using rule 37 (arrayDims)


State 89

   59 selectionStmt: _if _leftp condition $@2 . _rightp Stmtlist

    _rightp  shift, and go to state 110


State 90

   62 whileStmt: _while $@3 _leftp condition . $@4 _rightp Stmtlist

    $default  reduce using rule 61 ($@4)

    $@4  go to state 111


State 91

   67 forStmt: _for $@5 _leftp condition . _semicolon $@6 condition _semicolon $@7 condition _rightp $@8 Stmtlist

    _semicolon  shift, and go to state 112


State 92

   24 dimList: _leftsp _num . _rightsp

    _rightsp  shift, and go to state 113


State 93

   23 dimList: dimList _leftsp . _num _rightsp

    _num  shift, and go to state 114


State 94

   19 varList: varList _comma mutable .

    $default  reduce using rule 19 (varList)


State 95

   36 arrayDims: arrayDims _leftsp Expr _rightsp .

    $default  reduce using rule 36 (arrayDims)


State 96

   52 Expr: _leftp Expr _rightp .

    $default  reduce using rule 52 (Expr)


State 97

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   50     | Expr _or Expr .
   51     | Expr . _and Expr

    _and     shift, and go to state 76
    _eq      shift, and go to state 77
    _ne      shift, and go to state 78
    _lt      shift, and go to state 79
    _le      shift, and go to state 80
    _gt      shift, and go to state 81
    _ge      shift, and go to state 82
    _minus   shift, and go to state 83
    _plus    shift, and go to state 84
    _mul     shift, and go to state 85
    _div     shift, and go to state 86
    _modulo  shift, and go to state 87

    $default  reduce using rule 50 (Expr)


State 98

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr
   51     | Expr _and Expr .

    _eq      shift, and go to state 77
    _ne      shift, and go to state 78
    _lt      shift, and go to state 79
    _le      shift, and go to state 80
    _gt      shift, and go to state 81
    _ge      shift, and go to state 82
    _minus   shift, and go to state 83
    _plus    shift, and go to state 84
    _mul     shift, and go to state 85
    _div     shift, and go to state 86
    _modulo  shift, and go to state 87

    $default  reduce using rule 51 (Expr)


State 99

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   48     | Expr _eq Expr .
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    _lt      shift, and go to state 79
    _le      shift, and go to state 80
    _gt      shift, and go to state 81
    _ge      shift, and go to state 82
    _minus   shift, and go to state 83
    _plus    shift, and go to state 84
    _mul     shift, and go to state 85
    _div     shift, and go to state 86
    _modulo  shift, and go to state 87

    $default  reduce using rule 48 (Expr)


State 100

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   49     | Expr _ne Expr .
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    _lt      shift, and go to state 79
    _le      shift, and go to state 80
    _gt      shift, and go to state 81
    _ge      shift, and go to state 82
    _minus   shift, and go to state 83
    _plus    shift, and go to state 84
    _mul     shift, and go to state 85
    _div     shift, and go to state 86
    _modulo  shift, and go to state 87

    $default  reduce using rule 49 (Expr)


State 101

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   44     | Expr _lt Expr .
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    _minus   shift, and go to state 83
    _plus    shift, and go to state 84
    _mul     shift, and go to state 85
    _div     shift, and go to state 86
    _modulo  shift, and go to state 87

    $default  reduce using rule 44 (Expr)


State 102

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   45     | Expr _le Expr .
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    _minus   shift, and go to state 83
    _plus    shift, and go to state 84
    _mul     shift, and go to state 85
    _div     shift, and go to state 86
    _modulo  shift, and go to state 87

    $default  reduce using rule 45 (Expr)


State 103

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   47     | Expr _gt Expr .
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    _minus   shift, and go to state 83
    _plus    shift, and go to state 84
    _mul     shift, and go to state 85
    _div     shift, and go to state 86
    _modulo  shift, and go to state 87

    $default  reduce using rule 47 (Expr)


State 104

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   46     | Expr _ge Expr .
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    _minus   shift, and go to state 83
    _plus    shift, and go to state 84
    _mul     shift, and go to state 85
    _div     shift, and go to state 86
    _modulo  shift, and go to state 87

    $default  reduce using rule 46 (Expr)


State 105

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   39     | Expr _minus Expr .
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    _mul     shift, and go to state 85
    _div     shift, and go to state 86
    _modulo  shift, and go to state 87

    $default  reduce using rule 39 (Expr)


State 106

   38 Expr: Expr . _plus Expr
   38     | Expr _plus Expr .
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    _mul     shift, and go to state 85
    _div     shift, and go to state 86
    _modulo  shift, and go to state 87

    $default  reduce using rule 38 (Expr)


State 107

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   40     | Expr _mul Expr .
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    $default  reduce using rule 40 (Expr)


State 108

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   41     | Expr _div Expr .
   42     | Expr . _modulo Expr
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    $default  reduce using rule 41 (Expr)


State 109

   38 Expr: Expr . _plus Expr
   39     | Expr . _minus Expr
   40     | Expr . _mul Expr
   41     | Expr . _div Expr
   42     | Expr . _modulo Expr
   42     | Expr _modulo Expr .
   44     | Expr . _lt Expr
   45     | Expr . _le Expr
   46     | Expr . _ge Expr
   47     | Expr . _gt Expr
   48     | Expr . _eq Expr
   49     | Expr . _ne Expr
   50     | Expr . _or Expr
   51     | Expr . _and Expr

    $default  reduce using rule 42 (Expr)


State 110

   59 selectionStmt: _if _leftp condition $@2 _rightp . Stmtlist

    _char       shift, and go to state 17
    _int        shift, and go to state 18
    _float      shift, and go to state 19
    _double     shift, and go to state 20
    _short      shift, and go to state 21
    _long       shift, and go to state 22
    _break      shift, and go to state 23
    _leftb      shift, and go to state 115
    _semicolon  shift, and go to state 116
    _id         shift, and go to state 24
    _if         shift, and go to state 25
    _while      shift, and go to state 26
    _for        shift, and go to state 27

    statement       go to state 117
    expressionStmt  go to state 30
    vardeclaration  go to state 31
    typeSpecifier   go to state 32
    expression      go to state 33
    LValue          go to state 34
    arrayDims       go to state 35
    selectionStmt   go to state 36
    whileStmt       go to state 37
    forStmt         go to state 38
    breakStmt       go to state 39
    Stmtlist        go to state 118


State 111

   62 whileStmt: _while $@3 _leftp condition $@4 . _rightp Stmtlist

    _rightp  shift, and go to state 119


State 112

   67 forStmt: _for $@5 _leftp condition _semicolon . $@6 condition _semicolon $@7 condition _rightp $@8 Stmtlist

    $default  reduce using rule 64 ($@6)

    $@6  go to state 120


State 113

   24 dimList: _leftsp _num _rightsp .

    $default  reduce using rule 24 (dimList)


State 114

   23 dimList: dimList _leftsp _num . _rightsp

    _rightsp  shift, and go to state 121


State 115

   69 Stmtlist: _leftb . statementList _rightb

    _char    shift, and go to state 17
    _int     shift, and go to state 18
    _float   shift, and go to state 19
    _double  shift, and go to state 20
    _short   shift, and go to state 21
    _long    shift, and go to state 22
    _break   shift, and go to state 23
    _id      shift, and go to state 24
    _if      shift, and go to state 25
    _while   shift, and go to state 26
    _for     shift, and go to state 27

    statementList   go to state 122
    statement       go to state 29
    expressionStmt  go to state 30
    vardeclaration  go to state 31
    typeSpecifier   go to state 32
    expression      go to state 33
    LValue          go to state 34
    arrayDims       go to state 35
    selectionStmt   go to state 36
    whileStmt       go to state 37
    forStmt         go to state 38
    breakStmt       go to state 39


State 116

   71 Stmtlist: _semicolon .

    $default  reduce using rule 71 (Stmtlist)


State 117

   70 Stmtlist: statement .

    $default  reduce using rule 70 (Stmtlist)


State 118

   59 selectionStmt: _if _leftp condition $@2 _rightp Stmtlist .

    $default  reduce using rule 59 (selectionStmt)


State 119

   62 whileStmt: _while $@3 _leftp condition $@4 _rightp . Stmtlist

    _char       shift, and go to state 17
    _int        shift, and go to state 18
    _float      shift, and go to state 19
    _double     shift, and go to state 20
    _short      shift, and go to state 21
    _long       shift, and go to state 22
    _break      shift, and go to state 23
    _leftb      shift, and go to state 115
    _semicolon  shift, and go to state 116
    _id         shift, and go to state 24
    _if         shift, and go to state 25
    _while      shift, and go to state 26
    _for        shift, and go to state 27

    statement       go to state 117
    expressionStmt  go to state 30
    vardeclaration  go to state 31
    typeSpecifier   go to state 32
    expression      go to state 33
    LValue          go to state 34
    arrayDims       go to state 35
    selectionStmt   go to state 36
    whileStmt       go to state 37
    forStmt         go to state 38
    breakStmt       go to state 39
    Stmtlist        go to state 123


State 120

   67 forStmt: _for $@5 _leftp condition _semicolon $@6 . condition _semicolon $@7 condition _rightp $@8 Stmtlist

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    expression  go to state 59
    LValue      go to state 60
    arrayDims   go to state 35
    Expr        go to state 61
    condition   go to state 124


State 121

   23 dimList: dimList _leftsp _num _rightsp .

    $default  reduce using rule 23 (dimList)


State 122

    9 statementList: statementList . statement
   69 Stmtlist: _leftb statementList . _rightb

    _char    shift, and go to state 17
    _int     shift, and go to state 18
    _float   shift, and go to state 19
    _double  shift, and go to state 20
    _short   shift, and go to state 21
    _long    shift, and go to state 22
    _break   shift, and go to state 23
    _rightb  shift, and go to state 125
    _id      shift, and go to state 24
    _if      shift, and go to state 25
    _while   shift, and go to state 26
    _for     shift, and go to state 27

    statement       go to state 46
    expressionStmt  go to state 30
    vardeclaration  go to state 31
    typeSpecifier   go to state 32
    expression      go to state 33
    LValue          go to state 34
    arrayDims       go to state 35
    selectionStmt   go to state 36
    whileStmt       go to state 37
    forStmt         go to state 38
    breakStmt       go to state 39


State 123

   62 whileStmt: _while $@3 _leftp condition $@4 _rightp Stmtlist .

    $default  reduce using rule 62 (whileStmt)


State 124

   67 forStmt: _for $@5 _leftp condition _semicolon $@6 condition . _semicolon $@7 condition _rightp $@8 Stmtlist

    _semicolon  shift, and go to state 126


State 125

   69 Stmtlist: _leftb statementList _rightb .

    $default  reduce using rule 69 (Stmtlist)


State 126

   67 forStmt: _for $@5 _leftp condition _semicolon $@6 condition _semicolon . $@7 condition _rightp $@8 Stmtlist

    $default  reduce using rule 65 ($@7)

    $@7  go to state 127


State 127

   67 forStmt: _for $@5 _leftp condition _semicolon $@6 condition _semicolon $@7 . condition _rightp $@8 Stmtlist

    _uminus  shift, and go to state 53
    _leftp   shift, and go to state 54
    _id      shift, and go to state 24
    _num     shift, and go to state 55
    _dnum    shift, and go to state 56

    expression  go to state 59
    LValue      go to state 60
    arrayDims   go to state 35
    Expr        go to state 61
    condition   go to state 128


State 128

   67 forStmt: _for $@5 _leftp condition _semicolon $@6 condition _semicolon $@7 condition . _rightp $@8 Stmtlist

    _rightp  shift, and go to state 129


State 129

   67 forStmt: _for $@5 _leftp condition _semicolon $@6 condition _semicolon $@7 condition _rightp . $@8 Stmtlist

    $default  reduce using rule 66 ($@8)

    $@8  go to state 130


State 130

   67 forStmt: _for $@5 _leftp condition _semicolon $@6 condition _semicolon $@7 condition _rightp $@8 . Stmtlist

    _char       shift, and go to state 17
    _int        shift, and go to state 18
    _float      shift, and go to state 19
    _double     shift, and go to state 20
    _short      shift, and go to state 21
    _long       shift, and go to state 22
    _break      shift, and go to state 23
    _leftb      shift, and go to state 115
    _semicolon  shift, and go to state 116
    _id         shift, and go to state 24
    _if         shift, and go to state 25
    _while      shift, and go to state 26
    _for        shift, and go to state 27

    statement       go to state 117
    expressionStmt  go to state 30
    vardeclaration  go to state 31
    typeSpecifier   go to state 32
    expression      go to state 33
    LValue          go to state 34
    arrayDims       go to state 35
    selectionStmt   go to state 36
    whileStmt       go to state 37
    forStmt         go to state 38
    breakStmt       go to state 39
    Stmtlist        go to state 131


State 131

   67 forStmt: _for $@5 _leftp condition _semicolon $@6 condition _semicolon $@7 condition _rightp $@8 Stmtlist .

    $default  reduce using rule 67 (forStmt)
